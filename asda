def gaussian_elimination(matrix, b):

    n = len(matrix)
    
    for i in range(n):
        matrix[i].append(b[i])
    
    for i in range(n):
        diag = matrix[i][i]
        if diag == 0:
            raise ValueError("Matrix is singular or near-singular.")
        for j in range(i, n + 1):
            matrix[i][j] /= diag
        
        for k in range(i + 1, n):
            factor = matrix[k][i]
            for j in range(i, n + 1):
                matrix[k][j] -= factor * matrix[i][j]
    
    x = [0] * n
    for i in range(n - 1, -1, -1):
        x[i] = matrix[i][n] - sum(matrix[i][j] * x[j] for j in range(i + 1, n))
    
    return x

A = [
    [2, 1, -1],
    [-3, -1, 2],
    [-2, 1, 2]
]
b = [8, -11, -3]

solution = gaussian_elimination(A, b)
print("Solution:", solution)
